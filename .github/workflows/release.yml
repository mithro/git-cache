name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-release:
    name: Build Release Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        include:
          - os: ubuntu-20.04
            artifact: git-cache-ubuntu-20.04
          - os: ubuntu-22.04
            artifact: git-cache-ubuntu-22.04
            
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git libcurl4-openssl-dev libjson-c-dev
        
    - name: Build release binary
      run: |
        make clean
        make CFLAGS="-Wall -Wextra -std=c99 -pedantic -O2 -DNDEBUG" cache
        strip git-cache
        
    - name: Test release binary
      run: |
        ./git-cache --version
        ./git-cache --help
        make url-test
        make url-test-run
        
    - name: Package binary
      run: |
        mkdir -p dist
        cp git-cache dist/
        cp README.md dist/
        cp CODING_STYLE.md dist/
        tar -czf ${{ matrix.artifact }}.tar.gz -C dist .
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: ${{ matrix.artifact }}.tar.gz
        
  create-release:
    name: Create Release
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          git-cache-ubuntu-20.04/git-cache-ubuntu-20.04.tar.gz
          git-cache-ubuntu-22.04/git-cache-ubuntu-22.04.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}